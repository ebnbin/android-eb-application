buildscript {
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.0'
    }
}

plugins {
    id 'com.github.dcendents.android-maven' version '1.5'
    id 'com.jfrog.bintray' version '1.7.3'
}

repositories {
    jcenter()

    maven {
        url 'https://jitpack.io'
    }
}

apply plugin: 'com.android.library'

ext {
    publishedGroupId = 'com.ebnbin'
    artifact = 'eb-application'

    libraryName = 'EB Application'
    libraryDescription = 'EB Application'

    siteUrl = 'https://github.com/ebnbin/android-eb-application'
    gitUrl = 'https://github.com/ebnbin/android-eb-application.git'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'

    developerId = 'ebnbin'
    developerName = 'Ebn Zhang'
    developerEmail = 'ebnbin@gmail.com'

    libraryVersion = '0.0.10'

    bintrayRepo = 'maven'
    bintrayName = 'eb-application'

    allLicenses = ['Apache-2.0']
}

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 25
    }
}

dependencies {
    compile 'com.ebnbin:eb:0.1.5'
    compile 'com.android.support:cardview-v7:25.3.0'
    compile 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.1'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.squareup.okhttp3:okhttp:3.6.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
}

apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
//apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'

apply plugin: 'com.jfrog.bintray'

version = libraryVersion

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    // Disables javadoc because of the bug of library dependencies.
//    archives javadocJar
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}
